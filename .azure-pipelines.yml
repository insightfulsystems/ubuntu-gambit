# https://aka.ms/yaml

trigger:
- master

stages:
- stage: amd64
  displayName: amd64 (Intel/AMD64)
  dependsOn: [] 
  variables:
    - name: DOCKER
      value: docker --config=~/.docker
    - name: ARCH
      value: amd64
  jobs:
  - job: 
    displayName: build and push image
    timeoutInMinutes: 120
    pool:
        vmImage: 'ubuntu-latest'
    steps:
        - script: |
            make qemu
            make wrap-$(ARCH)
          displayName: setup
        - script: |
            make build-$(ARCH)
          displayName: build $(ARCH)
        - script: |
            $(DOCKER) login -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)
            make push-$(ARCH)
          displayName: push image for $(ARCH)


- stage: arm32v7
  displayName: arm32v7 (Pi 2+ and other armhf)
  dependsOn: []
  variables:
    - name: DOCKER
      value: docker --config=~/.docker
    - name: ARCH
      value: arm32v7 
  jobs:
  - job: 
    displayName: build and push image
    timeoutInMinutes: 480
    pool:
        vmImage: 'ubuntu-latest'
    steps:
        - script: |
            make qemu
            make wrap-$(ARCH)
          displayName: setup
        - script: |
            make build-$(ARCH)
          displayName: build $(ARCH)
        - script: |
            $(DOCKER) login -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)
            make push-$(ARCH)
          displayName: push image for $(ARCH)

- stage: arm64v8
  displayName: arm64v8 (Pi 3+ and other ARM64)
  dependsOn: []
  variables:
    - name: DOCKER
      value: docker --config=~/.docker
    - name: ARCH
      value: arm64v8
  jobs:
  - job: 
    displayName: build and push image
    timeoutInMinutes: 480
    pool:
        vmImage: 'ubuntu-latest'
    steps:
        - script: |
            make qemu
            make wrap-$(ARCH)
          displayName: setup
        - script: |
            make build-$(ARCH)
          displayName: build $(ARCH)
        - script: |
            $(DOCKER) login -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)
            make push-$(ARCH)
          displayName: push image for $(ARCH)

- stage: manifest
  displayName: multi-arch manifest
  dependsOn: 
    - amd64
    - arm32v7
    - arm64v8
  variables:
    - name: DOCKER
      value: docker --config=~/.docker
  jobs:
  - job: Manifest 
    pool:
      vmImage: 'ubuntu-latest'
    steps:
        - script: |
            make setup-manifest
            $(DOCKER) login -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)
            make build-manifest
            make push-manifest
